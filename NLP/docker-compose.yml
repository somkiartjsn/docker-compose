version: '3'

services:
  # ##### loyalty admin backend docker #####
  # loyalty-admin-backend:
  #   container_name: loyalty-admin-backend-1
  #   image: loyalty-admin-backend:latest
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - NODE_ENV=test
  #     - DATABASE_URL=mongodb://database:27017
  #     - DATABASE_NAME=AIS_Royalty
  #     - BROKERS=kafka-1:9092
  #     - DEFAULT_PAGINATE_PAGE=1
  #     - DEFAULT_PAGINATE_PERPAGE=20
  #     - MINIO_END_POINT=minio
  #     - MINIO_PORT=9000
  #     - MINIO_USE_SSL=false
  #     - MINIO_ACCESS_KEY=
  #     - MINIO_SECRET_KEY=
  #     - MINIO_CDN_URL=http://minio:3001/minio
  #     - MINIO_PUBLIC_BUCKET=ais-private-bucket
  #     - MINIO_PRIVATE_BUCKET=ais-public-bucket

  zookeeper-1:
    container_name: zookeeper-1
    image: zookeeper
    restart: always
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
      - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
  kafka-1:
    container_name: kafka-1
    image: bitnami/kafka
    restart: on-failure
    depends_on:
      - zookeeper-1
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:2181
      - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CREATE_TOPICS=messages:1:3
    healthcheck:
      test:
        ['CMD-SHELL', 'kafka-topics.sh --bootstrap-server localhost:9092 --list']
      interval: 5s
      timeout: 10s
      retries: 5
  
  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.2
    restart: "no"
    environment:
      KAFKA_BROKERCONNECT: "kafka-1:29092"
    ports:
      - 9003:9000
    depends_on:
      - kafka-1

  database:
    container_name: mongo-1
    image: mongo:4.4
    ports:
      - 27017:27017
    volumes:
      - ./db:/data/db

  minio:
    container_name: minio
    image: minio/minio:latest
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - ./minio_data:/data
    command: server --console-address ":9001" /data

  # script to create default minio's buckets, access-key, and secret-key
  create-buckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/ais-private;
      /usr/bin/mc mb myminio/ais-public;
      /usr/bin/mc anonymous set download myminio/ais-public;
      /usr/bin/mc admin user svcacct add --access-key "minio-access" --secret-key "minio-secret" myminio minio;
      exit 0;
      "

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "3001:3001"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - minio

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    restart: unless-stopped
  
  sonarqube:
    image: sonarqube:community
    restart: unless-stopped
    ports:
      - "9100:9000"
      
networks:
  net:
    name: 'net'
    driver: bridge
